# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.


# I tried to test with CL, but installing these VS tools are always a pain in the ass
# and chocolatey seems to be down all the time, so even searching the packages is annoying
# so I just used clang for now 

name: Windows Build Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

   # - name: Restore NuGet packages
   #  working-directory: ${{env.GITHUB_WORKSPACE}}
   #  run: nuget restore ${{env.SOLUTION_FILE_PATH}}
   # - name: Install-CL
   #   run: choco install visualstudio2019-workload-nativedesktop
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      #run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
      run: clang BUILD.c && .\a.exe

    - name: testing executable
      run: .\build\retriever -l 'vinissou' .\src\app.c


